(()=>{"use strict";var n={669:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(15),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([n.id,".news__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 1rem auto;\r\n    margin-bottom: 1.6%;\r\n    background: #fff;\r\n    color: #333;\r\n    line-height: 1.4;\r\n    font-family: Arial, sans-serif;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n}\r\n\r\n.news__item:hover .news__meta-photo {\r\n    transform: scale(1.3) rotate(3deg);\r\n}\r\n\r\n.news__item .news__meta {\r\n    position: relative;\r\n    height: 200px;\r\n}\r\n\r\n.news__item .news__meta-photo {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-size: cover;\r\n    background-position: center;\r\n    transition: transform 0.2s;\r\n}\r\n\r\n.news__item .news__meta-details,\r\n.news__item .news__meta-details ul {\r\n    margin: auto;\r\n    padding: 0;\r\n    list-style: none;\r\n}\r\n\r\n.news__item .news__meta-details {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: -120%;\r\n    margin: auto;\r\n    transition: left 0.2s;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    color: #fff;\r\n    padding: 10px;\r\n    width: 100%;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n.news__item .news__description {\r\n    padding: 1rem;\r\n    background: #fff;\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n\r\n.news__item .news__description h2 {\r\n    line-height: 1;\r\n    margin: 0;\r\n    font-size: 1.7rem;\r\n}\r\n\r\n.news__item .news__description h3 {\r\n    font-size: 1rem;\r\n    font-weight: 300;\r\n    text-transform: uppercase;\r\n    color: #a2a2a2;\r\n    margin-top: 5px;\r\n}\r\n\r\n.news__item .news__description .news__read-more {\r\n    text-align: right;\r\n}\r\n\r\n.news__item .news__description .news__read-more a {\r\n    color: #5ad67d;\r\n    display: inline-block;\r\n    position: relative;\r\n    text-decoration: none;\r\n    font-weight: 800;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:after {\r\n    content: '→';\r\n    margin-left: -10px;\r\n    opacity: 0;\r\n    vertical-align: middle;\r\n    transition: margin 0.3s, opacity 0.3s;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:hover:after {\r\n    margin-left: 5px;\r\n    opacity: 1;\r\n}\r\n\r\n.news__item p {\r\n    margin: 1rem 0 0;\r\n}\r\n\r\n.news__item p:first-of-type {\r\n    margin-top: 1.25rem;\r\n    position: relative;\r\n}\r\n\r\n.news__item p:first-of-type:before {\r\n    content: '';\r\n    position: absolute;\r\n    height: 5px;\r\n    background: #5ad67d;\r\n    width: 35px;\r\n    top: -0.75rem;\r\n    border-radius: 3px;\r\n}\r\n\r\n.news__item:hover .news__meta-details {\r\n    left: 0%;\r\n}\r\n\r\n@media (min-width: 640px) {\r\n    .news__item {\r\n        flex-direction: row;\r\n        max-width: 700px;\r\n    }\r\n\r\n    .news__item .news__meta {\r\n        flex-basis: 40%;\r\n        height: auto;\r\n    }\r\n\r\n    .news__item .news__description {\r\n        flex-basis: 60%;\r\n    }\r\n\r\n    .news__item .news__description:before {\r\n        -webkit-transform: skewX(-3deg);\r\n        transform: skewX(-3deg);\r\n        content: '';\r\n        background: #fff;\r\n        width: 30px;\r\n        position: absolute;\r\n        left: -10px;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: -1;\r\n    }\r\n\r\n    .news__item.alt {\r\n        flex-direction: row-reverse;\r\n    }\r\n\r\n    .news__item.alt .news__description:before {\r\n        left: inherit;\r\n        right: -10px;\r\n        -webkit-transform: skew(3deg);\r\n        transform: skew(3deg);\r\n    }\r\n\r\n    .news__item.alt .news__meta-details {\r\n        padding-left: 25px;\r\n    }\r\n}\r\n","",{version:3,sources:["webpack://./src/components/view/news/news.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,gBAAgB;IAChB,WAAW;IACX,gBAAgB;IAChB,8BAA8B;IAC9B,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,sBAAsB;IACtB,2BAA2B;IAC3B,0BAA0B;AAC9B;;AAEA;;IAEI,YAAY;IACZ,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,qBAAqB;IACrB,8BAA8B;IAC9B,WAAW;IACX,aAAa;IACb,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,cAAc;IACd,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,yBAAyB;IACzB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,qBAAqB;IACrB,kBAAkB;IAClB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,UAAU;IACV,sBAAsB;IACtB,qCAAqC;AACzC;;AAEA;IACI,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,mBAAmB;IACnB,WAAW;IACX,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI;QACI,mBAAmB;QACnB,gBAAgB;IACpB;;IAEA;QACI,eAAe;QACf,YAAY;IAChB;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,+BAA+B;QAC/B,uBAAuB;QACvB,WAAW;QACX,gBAAgB;QAChB,WAAW;QACX,kBAAkB;QAClB,WAAW;QACX,MAAM;QACN,SAAS;QACT,WAAW;IACf;;IAEA;QACI,2BAA2B;IAC/B;;IAEA;QACI,aAAa;QACb,YAAY;QACZ,6BAA6B;QAC7B,qBAAqB;IACzB;;IAEA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:[".news__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 1rem auto;\r\n    margin-bottom: 1.6%;\r\n    background: #fff;\r\n    color: #333;\r\n    line-height: 1.4;\r\n    font-family: Arial, sans-serif;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n}\r\n\r\n.news__item:hover .news__meta-photo {\r\n    transform: scale(1.3) rotate(3deg);\r\n}\r\n\r\n.news__item .news__meta {\r\n    position: relative;\r\n    height: 200px;\r\n}\r\n\r\n.news__item .news__meta-photo {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-size: cover;\r\n    background-position: center;\r\n    transition: transform 0.2s;\r\n}\r\n\r\n.news__item .news__meta-details,\r\n.news__item .news__meta-details ul {\r\n    margin: auto;\r\n    padding: 0;\r\n    list-style: none;\r\n}\r\n\r\n.news__item .news__meta-details {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: -120%;\r\n    margin: auto;\r\n    transition: left 0.2s;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    color: #fff;\r\n    padding: 10px;\r\n    width: 100%;\r\n    font-size: 0.9rem;\r\n}\r\n\r\n.news__item .news__description {\r\n    padding: 1rem;\r\n    background: #fff;\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n\r\n.news__item .news__description h2 {\r\n    line-height: 1;\r\n    margin: 0;\r\n    font-size: 1.7rem;\r\n}\r\n\r\n.news__item .news__description h3 {\r\n    font-size: 1rem;\r\n    font-weight: 300;\r\n    text-transform: uppercase;\r\n    color: #a2a2a2;\r\n    margin-top: 5px;\r\n}\r\n\r\n.news__item .news__description .news__read-more {\r\n    text-align: right;\r\n}\r\n\r\n.news__item .news__description .news__read-more a {\r\n    color: #5ad67d;\r\n    display: inline-block;\r\n    position: relative;\r\n    text-decoration: none;\r\n    font-weight: 800;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:after {\r\n    content: '→';\r\n    margin-left: -10px;\r\n    opacity: 0;\r\n    vertical-align: middle;\r\n    transition: margin 0.3s, opacity 0.3s;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:hover:after {\r\n    margin-left: 5px;\r\n    opacity: 1;\r\n}\r\n\r\n.news__item p {\r\n    margin: 1rem 0 0;\r\n}\r\n\r\n.news__item p:first-of-type {\r\n    margin-top: 1.25rem;\r\n    position: relative;\r\n}\r\n\r\n.news__item p:first-of-type:before {\r\n    content: '';\r\n    position: absolute;\r\n    height: 5px;\r\n    background: #5ad67d;\r\n    width: 35px;\r\n    top: -0.75rem;\r\n    border-radius: 3px;\r\n}\r\n\r\n.news__item:hover .news__meta-details {\r\n    left: 0%;\r\n}\r\n\r\n@media (min-width: 640px) {\r\n    .news__item {\r\n        flex-direction: row;\r\n        max-width: 700px;\r\n    }\r\n\r\n    .news__item .news__meta {\r\n        flex-basis: 40%;\r\n        height: auto;\r\n    }\r\n\r\n    .news__item .news__description {\r\n        flex-basis: 60%;\r\n    }\r\n\r\n    .news__item .news__description:before {\r\n        -webkit-transform: skewX(-3deg);\r\n        transform: skewX(-3deg);\r\n        content: '';\r\n        background: #fff;\r\n        width: 30px;\r\n        position: absolute;\r\n        left: -10px;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: -1;\r\n    }\r\n\r\n    .news__item.alt {\r\n        flex-direction: row-reverse;\r\n    }\r\n\r\n    .news__item.alt .news__description:before {\r\n        left: inherit;\r\n        right: -10px;\r\n        -webkit-transform: skew(3deg);\r\n        transform: skew(3deg);\r\n    }\r\n\r\n    .news__item.alt .news__meta-details {\r\n        padding-left: 25px;\r\n    }\r\n}\r\n"],sourceRoot:""}]);const A=s},501:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(15),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([n.id,".sources {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  width: 100%;\r\n  overflow: auto;\r\n  align-items: center;\r\n  font: 300 1em 'Fira Sans', sans-serif;\r\n}\r\n\r\n.source__item {\r\n  background: none;\r\n  border: 2px solid #30c5ff;\r\n  font: inherit;\r\n  line-height: 1;\r\n  margin: 0.5em;\r\n  padding: 1em 2em;\r\n  color: #70d6ff;\r\n  transition: 0.25s;\r\n  cursor: pointer;\r\n}\r\n\r\n.source__item:hover,\r\n.source__item:focus {\r\n  border-color: #3fcc59;\r\n  color: #69db7e;\r\n  box-shadow: 0 0.5em 0.5em -0.4em #3fcc59;\r\n  transform: translateY(-0.25em);\r\n}\r\n\r\n.source__item-name {\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/view/sources/sources.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,iBAAiB;EACjB,WAAW;EACX,cAAc;EACd,mBAAmB;EACnB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;EAChB,yBAAyB;EACzB,aAAa;EACb,cAAc;EACd,aAAa;EACb,gBAAgB;EAChB,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;;EAEE,qBAAqB;EACrB,cAAc;EACd,wCAAwC;EACxC,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB",sourcesContent:[".sources {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  width: 100%;\r\n  overflow: auto;\r\n  align-items: center;\r\n  font: 300 1em 'Fira Sans', sans-serif;\r\n}\r\n\r\n.source__item {\r\n  background: none;\r\n  border: 2px solid #30c5ff;\r\n  font: inherit;\r\n  line-height: 1;\r\n  margin: 0.5em;\r\n  padding: 1em 2em;\r\n  color: #70d6ff;\r\n  transition: 0.25s;\r\n  cursor: pointer;\r\n}\r\n\r\n.source__item:hover,\r\n.source__item:focus {\r\n  border-color: #3fcc59;\r\n  color: #69db7e;\r\n  box-shadow: 0 0.5em 0.5em -0.4em #3fcc59;\r\n  transform: translateY(-0.25em);\r\n}\r\n\r\n.source__item-name {\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n}\r\n"],sourceRoot:""}]);const A=s},767:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(15),o=e.n(t),i=e(645),s=e.n(i)()(o());s.push([n.id,"body {\r\n  color: #fff;\r\n  background: #17181c;\r\n  font-family: sans-serif;\r\n}\r\n\r\nheader {\r\n  padding: 10px 30px;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 40px;\r\n  font-weight: 800;\r\n}\r\n\r\nfooter {\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\nfooter .copyright {\r\n  font-size: 20px;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\nfooter .copyright a {\r\n  color: #444;\r\n  transition: all 0.4s;\r\n}\r\nfooter .copyright a:hover {\r\n  color: #555;\r\n}\r\nfooter .copyright:before {\r\n  content: '©';\r\n}\r\n.footer-logo-gh {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 130px;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: all 0.4s;\r\n}\r\n.gh-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.7;\r\n  transition: all 0.4s;\r\n}\r\n\r\n.footer-rss,\r\n.footer-year {\r\n  text-decoration: none;\r\n  color: #fff;\r\n  font-size: 20px;\r\n}\r\n\r\n.footer-rss {\r\n  opacity: 0.7;\r\n  transition: all 0.4s;\r\n  cursor: pointer;\r\n}\r\n.footer-rss:hover,\r\n.gh-icon:hover {\r\n  opacity: 0.9;\r\n}\r\n","",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,6BAA6B;AAC/B;AACA;EACE,eAAe;EACf,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,oBAAoB;AACtB;AACA;EACE,WAAW;AACb;AACA;EACE,YAAY;AACd;AACA;EACE,aAAa;EACb,eAAe;EACf,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,oBAAoB;AACtB;;AAEA;;EAEE,qBAAqB;EACrB,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,oBAAoB;EACpB,eAAe;AACjB;AACA;;EAEE,YAAY;AACd",sourcesContent:["body {\r\n  color: #fff;\r\n  background: #17181c;\r\n  font-family: sans-serif;\r\n}\r\n\r\nheader {\r\n  padding: 10px 30px;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 40px;\r\n  font-weight: 800;\r\n}\r\n\r\nfooter {\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\nfooter .copyright {\r\n  font-size: 20px;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\nfooter .copyright a {\r\n  color: #444;\r\n  transition: all 0.4s;\r\n}\r\nfooter .copyright a:hover {\r\n  color: #555;\r\n}\r\nfooter .copyright:before {\r\n  content: '©';\r\n}\r\n.footer-logo-gh {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 130px;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: all 0.4s;\r\n}\r\n.gh-icon {\r\n  width: 32px;\r\n  height: 32px;\r\n  opacity: 0.7;\r\n  transition: all 0.4s;\r\n}\r\n\r\n.footer-rss,\r\n.footer-year {\r\n  text-decoration: none;\r\n  color: #fff;\r\n  font-size: 20px;\r\n}\r\n\r\n.footer-rss {\r\n  opacity: 0.7;\r\n  transition: all 0.4s;\r\n  cursor: pointer;\r\n}\r\n.footer-rss:hover,\r\n.gh-icon:hover {\r\n  opacity: 0.9;\r\n}\r\n"],sourceRoot:""}]);const A=s},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e=n(r);return r[2]?"@media ".concat(r[2]," {").concat(e,"}"):e})).join("")},r.i=function(n,e,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var A=0;A<n.length;A++){var a=[].concat(n[A]);t&&o[a[0]]||(e&&(a[2]?a[2]="".concat(e," and ").concat(a[2]):a[2]=e),r.push(a))}},r}},15:n=>{function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}n.exports=function(n){var e,t,o=(t=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,r){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var t,o,i=[],s=!0,A=!1;try{for(e=e.call(n);!(s=(t=e.next()).done)&&(i.push(t.value),!r||i.length!==r);s=!0);}catch(n){A=!0,o=n}finally{try{s||null==e.return||e.return()}finally{if(A)throw o}}return i}}(e,t)||function(n,e){if(n){if("string"==typeof n)return r(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],s=o[3];if(!s)return i;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),c="/*# ".concat(a," */"),l=s.sources.map((function(n){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([c]).join("\n")}return[i].join("\n")}},242:(n,r,e)=>{e.r(r),e.d(r,{default:()=>s});var t=e(379),o=e.n(t),i=e(669);o()(i.Z,{insert:"head",singleton:!1});const s=i.Z.locals||{}},595:(n,r,e)=>{e.r(r),e.d(r,{default:()=>s});var t=e(379),o=e.n(t),i=e(501);o()(i.Z,{insert:"head",singleton:!1});const s=i.Z.locals||{}},427:(n,r,e)=>{e.r(r),e.d(r,{default:()=>s});var t=e(379),o=e.n(t),i=e(767);o()(i.Z,{insert:"head",singleton:!1});const s=i.Z.locals||{}},379:(n,r,e)=>{var t,o=function(){var n={};return function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[r]=e}return n[r]}}(),i=[];function s(n){for(var r=-1,e=0;e<i.length;e++)if(i[e].identifier===n){r=e;break}return r}function A(n,r){for(var e={},t=[],o=0;o<n.length;o++){var A=n[o],a=r.base?A[0]+r.base:A[0],c=e[a]||0,l="".concat(a," ").concat(c);e[a]=c+1;var d=s(l),f={css:A[1],media:A[2],sourceMap:A[3]};-1!==d?(i[d].references++,i[d].updater(f)):i.push({identifier:l,updater:m(f,r),references:1}),t.push(l)}return t}function a(n){var r=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var i=e.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(n){r.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(r);else{var s=o(n.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(r)}return r}var c,l=(c=[],function(n,r){return c[n]=r,c.filter(Boolean).join("\n")});function d(n,r,e,t){var o=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=l(r,o);else{var i=document.createTextNode(o),s=n.childNodes;s[r]&&n.removeChild(s[r]),s.length?n.insertBefore(i,s[r]):n.appendChild(i)}}function f(n,r,e){var t=e.css,o=e.media,i=e.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var u=null,p=0;function m(n,r){var e,t,o;if(r.singleton){var i=p++;e=u||(u=a(r)),t=d.bind(null,e,i,!1),o=d.bind(null,e,i,!0)}else e=a(r),t=f.bind(null,e,r),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return t(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t(n=r)}else o()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=A(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<e.length;t++){var o=s(e[t]);i[o].references--}for(var a=A(n,r),c=0;c<e.length;c++){var l=s(e[c]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}e=a}}}},717:function(n,r,e){var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0});const o=t(e(842)),i=e(527);r.default=class{constructor(){this.controller=new o.default,this.view=new i.AppView}start(){document.querySelector(".sources").addEventListener("click",(n=>this.controller.getNews(n,(n=>this.view.drawNews(n))))),this.controller.getSources((n=>this.view.drawSources(n)))}}},853:function(n,r,e){var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0});const o=t(e(24));class i extends o.default{constructor(){super("https://rss-news-api.onrender.com/",{apiKey:"5608cc398fd54acca6a6384853eeaa4e"})}}r.default=i},842:function(n,r,e){var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0});const o=t(e(853));class i extends o.default{getSources(n){super.getResp({endpoint:"sources"},n)}getNews(n,r){let e=n.target;const t=n.currentTarget;for(;e!==t;){if(e.classList.contains("source__item")){const n=e.getAttribute("data-source-id");return void(t.getAttribute("data-source")!==n&&n&&(t.setAttribute("data-source",n),super.getResp({endpoint:"everything",options:{sources:n}},r)))}e=e.parentNode}}}r.default=i},24:(n,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.default=class{constructor(n,r){this.baseLink=n,this.options=r}getResp({endpoint:n="",options:r={}},e=(()=>{console.error("No callback for GET response")})){this.load("GET",n,e,r)}errorHandler(n){if(!n.ok)throw 401!==n.status&&404!==n.status||console.log(`Sorry, but there is ${n.status} error: ${n.statusText}`),Error(n.statusText);return n}makeUrl(n,r){const e=Object.assign(Object.assign({},this.options),n);let t=`${this.baseLink}${r}?`;return Object.keys(e).forEach((n=>{t+=`${n}=${e[n]}&`})),t.slice(0,-1)}load(n,r,e,t={}){fetch(this.makeUrl(t,r),{method:n}).then(this.errorHandler).then((n=>n.json())).then((n=>e(n))).catch((n=>console.error(n)))}}},527:function(n,r,e){var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0}),r.AppView=void 0;const o=t(e(798)),i=t(e(53));class s{constructor(){this.news=new o.default,this.sources=new i.default}drawNews(n){const r=(null==n?void 0:n.articles)||[];this.news.draw(r)}drawSources(n){const r=n.sources||[];this.sources.draw(r)}}r.AppView=s,r.default=s},798:(n,r,e)=>{Object.defineProperty(r,"__esModule",{value:!0}),e(242),r.default=class{draw(n){const r=n.length>=10?n.filter(((n,r)=>r<10)):n,e=document.createDocumentFragment(),t=document.querySelector("#newsItemTemp");r.forEach(((n,r)=>{const o=t.content.cloneNode(!0);r%2&&o.querySelector(".news__item").classList.add("alt"),o.querySelector(".news__meta-photo").style.backgroundImage=`url(${n.urlToImage||"img/news_placeholder.jpg"})`,o.querySelector(".news__meta-author").textContent=n.author||n.source.name,o.querySelector(".news__meta-date").textContent=n.publishedAt.slice(0,10).split("-").reverse().join("-"),o.querySelector(".news__description-title").textContent=n.title,o.querySelector(".news__description-source").textContent=n.source.name,o.querySelector(".news__description-content").textContent=n.description,o.querySelector(".news__read-more a").setAttribute("href",n.url),e.append(o)})),document.querySelector(".news").innerHTML="",document.querySelector(".news").appendChild(e)}}},53:(n,r,e)=>{Object.defineProperty(r,"__esModule",{value:!0}),e(595),r.default=class{draw(n){const r=document.createDocumentFragment(),e=document.querySelector("#sourceItemTemp");n.forEach((n=>{const t=e.content.cloneNode(!0);t.querySelector(".source__item-name").textContent=n.name,t.querySelector(".source__item").setAttribute("data-source-id",n.id),r.append(t)})),document.querySelector(".sources").append(r)}}},607:function(n,r,e){var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0});const o=t(e(717));e(427),(new o.default).start()}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t].call(i.exports,i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.nc=void 0,e(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,